#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

VIDEO-SUMMARY: Generate video summary image

OPTIONS:
   -h, --help             Show this message
   -i, --input            Input file. Can be a wide variety of formats, try 'avconv -formats' to see a list.
   -v, --verbose          Verbose output.
   
   
EOF
exit 0
}

INPUT=
VERBOSE=false

params="$(getopt -o hvi: -l help,verbose,input: --name "$0" -- "$@")"
eval set -- "$params"

while true
do
    case "$1" in
        -h|--help)
            usage
            break
            ;;
        -i|--input)
            INPUT=$2
            shift 2
            ;;
        -v|--verbose)
            VERBOSE=true
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Not implemented: $1" >&2
            exit 1
            ;;
    esac
done


if $VERBOSE
then
	echo "VIDEO-SUMMARY: Starting..."
fi

TDIR="$(mktemp -d)"
echo $TDIR

DURATION_HMS=$(avconv -i "$INPUT" 2>&1 | grep Duration | cut -f 4 -d ' ')
DURATION_H=$(echo "$DURATION_HMS" | cut -d ':' -f 1)
DURATION_M=$(echo "$DURATION_HMS" | cut -d ':' -f 2)
DURATION_S=$(echo "$DURATION_HMS" | cut -d ':' -f 3 | cut -d '.' -f 1)
let "DURATION = ( 10#$DURATION_H * 60 + 10#$DURATION_M ) * 60 + 10#$DURATION_S"
let "INTERVAL = ( $DURATION / 24 )"
 
if [ "$DURATION" = '0' ] ; then
        echo "Invalid input video"
        usage
        exit 1
fi

FILENAME=$(basename "$INPUT")
EXTENSION="${FILENAME##*.}"
FILENAME="${FILENAME%.*}"

N='1'
OFFSET=$INTERVAL
let 'N_FILES = 23'

while [ "$OFFSET" -lt "$DURATION" ] ; do
  OUT_FILE=$(printf "%.2d.png" "$N")
  echo $OUT_FILE
  echo "writing $OUT_FILE ($N/$N_FILES)..."
  avconv -ss "$OFFSET" -i $INPUT -r 1 -vsync 1 -an "$TDIR"/"$OUT_FILE"
  #ffmpeg -i "$OUT_FILE".mp4 "$OUT_FILE"
  #rm "$OUT_FILE".mp4
  let "N = N + 1"
  let "OFFSET = OFFSET + INTERVAL"
done

montage "$TDIR"/*.png -tile 3x8 -geometry 300x200+0+0 -title "$INPUT, $DURATION_H:$DURATION_M:$DURATION_S" "$FILENAME-summary.png"

if $VERBOSE
then
	echo "VIDEO-SUMMARY: Done!"
fi

exit 0

